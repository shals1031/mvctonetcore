// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeliconLatest.DataEntities;

namespace TeliconLatest.Migrations
{
    [DbContext(typeof(TeliconDbContext))]
    [Migration("20210729185708_CreateUserTable")]
    partial class CreateUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TeliconLatest.DataEntities.Applications", b =>
                {
                    b.Property<string>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(235)
                        .HasColumnType("varchar(235)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ApplicationId");

                    b.ToTable("applications");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CustComment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CustDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustSignature")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsSIClick")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSITalk")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSIWatch")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTAddOutlet")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTExisting")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTNew")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTNotDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTRewireCable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTServiceCall")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTServiceRepOrd")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ServiceOrdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TechDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TechId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TechName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TechSignature")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<TimeSpan>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOut")
                        .HasColumnType("time");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.CustomerEquipments", b =>
                {
                    b.Property<int>("CustomerEquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MacDetail")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SerialNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CustomerEquipmentId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerEquipments");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Memberships", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Comment")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLockoutDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastPasswordChangedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ApplicationId" }, "FK_Memberships_Applications");

                    b.ToTable("memberships");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Profiles", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PropertyNames")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<byte[]>("PropertyValueBinary")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PropertyValueStrings")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Roles", b =>
                {
                    b.Property<string>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("RoleId");

                    b.HasIndex(new[] { "ApplicationId" }, "FK_Roles_Applications");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TasksInRoles", b =>
                {
                    b.Property<int>("RoleTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CanRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("RoleTaskId")
                        .HasName("PRIMARY");

                    b.ToTable("tasksinrole");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Users", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "ApplicationId" }, "FK_Users_Applications");

                    b.HasIndex(new[] { "UserName" }, "IDX_UserName");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.UsersInRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "FK_UsersInRoles_Roles");

                    b.ToTable("usersinroles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.CustomerEquipments", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Customer", "Customer")
                        .WithMany("CustomerEquipments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Memberships", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Applications", "Applications")
                        .WithMany("Memberships")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Memberships_Applications");

                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithOne("Membership")
                        .HasForeignKey("TeliconLatest.DataEntities.Memberships", "UserId")
                        .HasConstraintName("FK_Memberships_Users")
                        .IsRequired();

                    b.Navigation("Applications");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Profiles", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithOne("Profiles")
                        .HasForeignKey("TeliconLatest.DataEntities.Profiles", "UserId")
                        .HasConstraintName("FK_Profiles_Users")
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Roles", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Applications", "Applications")
                        .WithMany("Roles")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Roles_Applications");

                    b.Navigation("Applications");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Users", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Applications", "Application")
                        .WithMany("Users")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Users_Applications");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.UsersInRoles", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Roles", "Roles")
                        .WithMany("UsersInRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UsersInRoles_Roles")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithMany("UsersInRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsersInRoles_Users")
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Applications", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Customer", b =>
                {
                    b.Navigation("CustomerEquipments");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Roles", b =>
                {
                    b.Navigation("UsersInRoles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Users", b =>
                {
                    b.Navigation("Membership");

                    b.Navigation("Profiles");

                    b.Navigation("UsersInRoles");
                });
#pragma warning restore 612, 618
        }
    }
}

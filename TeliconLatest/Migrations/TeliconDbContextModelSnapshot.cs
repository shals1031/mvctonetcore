// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeliconLatest.DataEntities;

namespace TeliconLatest.Migrations
{
    [DbContext(typeof(TeliconDbContext))]
    partial class TeliconDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01100", b =>
                {
                    b.Property<int>("RateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AltCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("HasMaterials")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MaterialsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("MaxQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RateClass")
                        .HasColumnType("int");

                    b.Property<string>("RateDescr")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("RateUnit")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("RateID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RateClass" }, "FK_ADM01100_ADM03500");

                    b.HasIndex(new[] { "DepartmentId" }, "FK_ADM01100_ADM04200");

                    b.ToTable("adm01100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01110", b =>
                {
                    b.Property<int>("ActMatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActMatQty")
                        .HasColumnType("int");

                    b.Property<int>("ActivID")
                        .HasColumnType("int");

                    b.Property<int>("MaterID")
                        .HasColumnType("int");

                    b.HasKey("ActMatID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ActivID" }, "FK_ADM01110_ADM01100");

                    b.HasIndex(new[] { "MaterID" }, "FK_ADM01110_ADM13100");

                    b.ToTable("adm01110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01120", b =>
                {
                    b.Property<int>("splitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CVJunior")
                        .HasColumnType("double");

                    b.Property<double>("CVSenior")
                        .HasColumnType("double");

                    b.Property<double>("OVJunior2")
                        .HasColumnType("double");

                    b.Property<double>("OVSenior1")
                        .HasColumnType("double");

                    b.Property<double>("OVSenior2")
                        .HasColumnType("double");

                    b.Property<int>("activityID")
                        .HasColumnType("int");

                    b.HasKey("splitID")
                        .HasName("PRIMARY");

                    b.ToTable("adm01120");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01150", b =>
                {
                    b.Property<int>("RateHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("RateHistoryID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RateID" }, "FK_ADM01150_ADM01100");

                    b.ToTable("adm01150");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01250", b =>
                {
                    b.Property<int>("RateHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("RateHistoryID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RateID" }, "FK_ADM01250_ADM01100");

                    b.ToTable("adm01250");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01300", b =>
                {
                    b.Property<int>("accountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("accType")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("accountName")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("accountNo")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("address1")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("address2")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.Property<string>("address3")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.HasKey("accountID")
                        .HasName("PRIMARY");

                    b.ToTable("adm01300");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01400", b =>
                {
                    b.Property<int>("areaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("areaName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("zoneID")
                        .HasColumnType("int");

                    b.HasKey("areaID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "zoneID" }, "FK_ADM01400_ADM26100");

                    b.ToTable("adm01400");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02100", b =>
                {
                    b.Property<string>("BankId")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BankId")
                        .HasName("PRIMARY");

                    b.ToTable("adm02100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02200", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RecID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BankId" }, "FK_ADM02200_ADM02100");

                    b.ToTable("adm02200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02300", b =>
                {
                    b.Property<int>("BatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BatchDate")
                        .HasColumnType("datetime");

                    b.HasKey("BatchID")
                        .HasName("PRIMARY");

                    b.ToTable("adm02300");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03200", b =>
                {
                    b.Property<int>("CustID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("CustClass")
                        .HasColumnType("int");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndDt")
                        .HasColumnType("datetime");

                    b.Property<string>("Fax")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Parish")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("StartDt")
                        .HasColumnType("datetime");

                    b.Property<string>("Street")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("CustID")
                        .HasName("PRIMARY");

                    b.ToTable("adm03200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03300", b =>
                {
                    b.Property<int>("ConID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AreaID")
                        .HasColumnType("int");

                    b.Property<string>("Bankacc")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Branch")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("ConClass")
                        .HasColumnType("int");

                    b.Property<string>("DLicence")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmerPhone1")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmerPhone2")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmerRelation")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("EmergencyCon")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("EngagementDt")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("NIS")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Parish")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Phone2")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("PlateNo")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TRN")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TechNo")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("payScale")
                        .HasColumnType("int");

                    b.HasKey("ConID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Branch" }, "FK_ADM03300_ADM02200");

                    b.HasIndex(new[] { "DepartmentID" }, "FK_ADM03300_ADM04200");

                    b.ToTable("adm03300");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03400", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContractorID")
                        .HasColumnType("int");

                    b.Property<double>("ContractorRate")
                        .HasColumnType("double");

                    b.Property<bool>("CrewLead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHide")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("RecID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ContractorID" }, "FK_ADM03400_ADM03300");

                    b.HasIndex(new[] { "WorkOrderId" }, "FK_ADM03400_TRN23100");

                    b.ToTable("adm03400");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03500", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ClassId")
                        .HasName("PRIMARY");

                    b.ToTable("adm03500");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM04100", b =>
                {
                    b.Property<int>("DeductionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.HasKey("DeductionID")
                        .HasName("PRIMARY");

                    b.ToTable("adm04100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM04200", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.HasKey("DepartmentID")
                        .HasName("PRIMARY");

                    b.ToTable("adm04200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM04210", b =>
                {
                    b.Property<int>("DepActID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.HasKey("DepActID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ActivityID" }, "FK_ADM04210_ADM01100");

                    b.HasIndex(new[] { "DepartmentID" }, "FK_ADM04210_ADM04200");

                    b.ToTable("adm04210");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM07100", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<double>("Percentage")
                        .HasColumnType("double");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("TaxId")
                        .HasName("PRIMARY");

                    b.ToTable("adm07100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM12100", b =>
                {
                    b.Property<int>("locationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("locationName")
                        .HasMaxLength(35)
                        .HasColumnType("varchar(35)");

                    b.HasKey("locationID")
                        .HasName("PRIMARY");

                    b.ToTable("adm12100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM13100", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaterialUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("MaxQty")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MaterialID")
                        .HasName("PRIMARY");

                    b.ToTable("adm13100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM16100", b =>
                {
                    b.Property<int>("PeriodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("datetime");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("periodYear")
                        .HasColumnType("int");

                    b.HasKey("PeriodID")
                        .HasName("PRIMARY");

                    b.ToTable("adm16100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM16200", b =>
                {
                    b.Property<int>("POID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("BALANCE")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("PODate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("PONUM")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<decimal>("TOTAL")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("POID")
                        .HasName("PRIMARY");

                    b.ToTable("adm16200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM18100", b =>
                {
                    b.Property<int>("remarkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("remarkText")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("remarkID")
                        .HasName("PRIMARY");

                    b.ToTable("adm18100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM22100", b =>
                {
                    b.Property<int>("VehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ConID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FleetNo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("OwnedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PlateNo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.HasKey("VehicleID")
                        .HasName("PRIMARY");

                    b.ToTable("adm22100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM26100", b =>
                {
                    b.Property<int>("ZoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Addr")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Place")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SupervisorName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("ZoneID")
                        .HasName("PRIMARY");

                    b.ToTable("adm26100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Applications", b =>
                {
                    b.Property<string>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(235)
                        .HasColumnType("varchar(235)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("ApplicationId");

                    b.ToTable("applications");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CustComment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CustDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustSignature")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsSIClick")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSITalk")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSIWatch")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTAddOutlet")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTExisting")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTNew")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTNotDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTRewireCable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTServiceCall")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWTServiceRepOrd")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("JobDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ServiceOrdNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TechDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TechId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TechName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TechSignature")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<TimeSpan>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOut")
                        .HasColumnType("time");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.CustomerEquipments", b =>
                {
                    b.Property<int>("CustomerEquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MacDetail")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SerialNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CustomerEquipmentId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerEquipments");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Memberships", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Comment")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastLockoutDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastPasswordChangedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ApplicationId" }, "FK_Memberships_Applications");

                    b.ToTable("memberships");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Profiles", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PropertyNames")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.Property<byte[]>("PropertyValueBinary")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PropertyValueStrings")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("profiles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Roles", b =>
                {
                    b.Property<string>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("RoleId");

                    b.HasIndex(new[] { "ApplicationId" }, "FK_Roles_Applications");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN04100", b =>
                {
                    b.Property<int>("DeductionConductorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<int>("ConductorID")
                        .HasColumnType("int");

                    b.Property<int>("DeductionID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HoldIt")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Recurring")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<double>("YTDAmount")
                        .HasColumnType("double");

                    b.HasKey("DeductionConductorID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ConductorID" }, "FK_TRN04100_ADM03300");

                    b.HasIndex(new[] { "DeductionID" }, "FK_TRN04100_ADM04100");

                    b.ToTable("trn04100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN09100", b =>
                {
                    b.Property<int>("InvoiceNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ADM02300BatchID")
                        .HasColumnType("int");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeneratedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("InvNewNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceTitle")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal?>("InvoiceTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsNewFormat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("NewInvNo")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("batchTMP")
                        .HasColumnType("int");

                    b.Property<string>("statusTMP")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.HasKey("InvoiceNum")
                        .HasName("PRIMARY");

                    b.HasIndex("ADM02300BatchID");

                    b.ToTable("trn09100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN09101", b =>
                {
                    b.Property<int>("newnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GeneratedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceTitle")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<decimal?>("InvoiceTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("NewInvNo")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.HasKey("newnum")
                        .HasName("PRIMARY");

                    b.ToTable("trn09101");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN09110", b =>
                {
                    b.Property<int>("WoActID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNum")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoicedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("WoActID", "InvoiceNum")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "InvoiceNum" }, "FK_TRN09110_TRN09100");

                    b.ToTable("trn09110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN13110", b =>
                {
                    b.Property<int>("MergedSubOrderId")
                        .HasColumnType("int");

                    b.Property<int>("MergedOrderId")
                        .HasColumnType("int");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("MergedSubOrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MergedOrderId" }, "FK_TRN13120_TRN13110");

                    b.HasIndex(new[] { "WorkOrderId" }, "FK_TRN23100_TRN13110");

                    b.ToTable("trn13110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN13120", b =>
                {
                    b.Property<int>("MergedOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MergedRefNum")
                        .HasColumnType("text");

                    b.Property<DateTime?>("MergerdDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MergerdTitle")
                        .HasColumnType("text");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.HasKey("MergedOrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WorkOrderId" }, "FK_TRN13120_TRN23100");

                    b.ToTable("trn13120");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN17100", b =>
                {
                    b.Property<int>("QuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Quot_ref")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Quot_title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("RequestCity")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("RequestCountry")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("RequestStreet")
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<string>("Requestby")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Requestdt")
                        .HasColumnType("datetime");

                    b.HasKey("QuotationId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CreateBy" }, "FK_TRN17100_Users");

                    b.ToTable("trn17100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN17110", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ActQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ActivityDesc")
                        .HasColumnType("text");

                    b.Property<double?>("ActivityRate")
                        .HasColumnType("double");

                    b.Property<int>("QuotationId")
                        .HasColumnType("int");

                    b.HasKey("RecId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "QuotationId" }, "FK_TRN17110_TRN17100");

                    b.ToTable("trn17110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN19100", b =>
                {
                    b.Property<int>("SInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Requestdt")
                        .HasColumnType("datetime");

                    b.Property<string>("SInv_ref")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SInv_title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("SInvoiceId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ZoneId" }, "FK_ADM26100_TRN19100");

                    b.HasIndex(new[] { "CreateBy" }, "FK_TRN19100_Users");

                    b.ToTable("trn19100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN19110", b =>
                {
                    b.Property<int>("RecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("ActQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<double?>("ActivityRate")
                        .HasColumnType("double");

                    b.Property<int>("SInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("RecId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ActivityId" }, "FK_TRN19110_ADM01100");

                    b.HasIndex(new[] { "SInvoiceId" }, "FK_TRN19110_TRN19100");

                    b.ToTable("trn19110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23100", b =>
                {
                    b.Property<int>("Workid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AreaID")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletionDt")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dispatchdt")
                        .HasColumnType("datetime");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("PONum")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Requestby")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Requestdt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RollbackDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("SpliceDocs")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<bool>("Submitted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Wo_client")
                        .HasColumnType("int");

                    b.Property<string>("Wo_ref")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Wo_split")
                        .HasColumnType("double");

                    b.Property<double>("Wo_split2")
                        .HasColumnType("double");

                    b.Property<string>("Wo_title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("dateVerified")
                        .HasColumnType("datetime");

                    b.Property<string>("tempValue")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.HasKey("Workid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AreaID" }, "FK_TRN23100_ADM01400");

                    b.HasIndex(new[] { "Wo_client" }, "FK_TRN23100_ADM03200");

                    b.HasIndex(new[] { "ClassId" }, "FK_TRN23100_ADM03500");

                    b.HasIndex(new[] { "CreateBy" }, "FK_TRN23100_Users");

                    b.ToTable("trn23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23110", b =>
                {
                    b.Property<int>("RecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ActDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActPaid")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ActQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ActivityID")
                        .HasColumnType("int");

                    b.Property<bool>("AddMaterial")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AdtnlDetails")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<bool>("InvFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("OActQty")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("WorkOID")
                        .HasColumnType("int");

                    b.HasKey("RecID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ActivityID" }, "FK_TRN23110_ADM01100");

                    b.HasIndex(new[] { "WorkOID" }, "FK_TRN23110_TRN23100");

                    b.ToTable("trn23110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23120", b =>
                {
                    b.Property<int>("WoMatRecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("WoActID")
                        .HasColumnType("int");

                    b.Property<int>("WoMatID")
                        .HasColumnType("int");

                    b.Property<int>("WoMatQty")
                        .HasColumnType("int");

                    b.HasKey("WoMatRecID")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "WoActID" }, "FK_TRN23110_TRN23120");

                    b.ToTable("trn23120");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TasksInRoles", b =>
                {
                    b.Property<int>("RoleTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CanRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("RoleTaskId")
                        .HasName("PRIMARY");

                    b.ToTable("tasksinrole");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Users", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "ApplicationId" }, "FK_Users_Applications");

                    b.HasIndex(new[] { "UserName" }, "IDX_UserName");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.UsersInRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "FK_UsersInRoles_Roles");

                    b.ToTable("usersinroles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01100", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM04200", "ADM04200")
                        .WithMany("ADM01100")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_ADM01100_ADM04200")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.ADM03500", "ADM03500")
                        .WithMany("ADM01100")
                        .HasForeignKey("RateClass")
                        .HasConstraintName("FK_ADM01100_ADM03500")
                        .IsRequired();

                    b.Navigation("ADM03500");

                    b.Navigation("ADM04200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01110", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01100", "ADM01100")
                        .WithMany("ADM01110")
                        .HasForeignKey("ActivID")
                        .HasConstraintName("FK_ADM01110_ADM01100")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.ADM13100", "ADM13100")
                        .WithMany("ADM01110")
                        .HasForeignKey("MaterID")
                        .HasConstraintName("FK_ADM01110_ADM13100")
                        .IsRequired();

                    b.Navigation("ADM01100");

                    b.Navigation("ADM13100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01150", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01100", "ADM01100")
                        .WithMany("ADM01150")
                        .HasForeignKey("RateID")
                        .HasConstraintName("FK_ADM01150_ADM01100")
                        .IsRequired();

                    b.Navigation("ADM01100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01250", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01100", "ADM01100")
                        .WithMany("ADM01250")
                        .HasForeignKey("RateID")
                        .HasConstraintName("FK_ADM01250_ADM01100")
                        .IsRequired();

                    b.Navigation("ADM01100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01400", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM26100", "ADM26100")
                        .WithMany("ADM01400")
                        .HasForeignKey("zoneID")
                        .HasConstraintName("FK_ADM01400_ADM26100")
                        .IsRequired();

                    b.Navigation("ADM26100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02200", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM02100", "ADM02100")
                        .WithMany("ADM02200")
                        .HasForeignKey("BankId")
                        .HasConstraintName("FK_ADM02200_ADM02100")
                        .IsRequired();

                    b.Navigation("ADM02100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03300", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM02200", "ADM02200")
                        .WithMany("ADM03300")
                        .HasForeignKey("Branch")
                        .HasConstraintName("FK_ADM03300_ADM02200");

                    b.HasOne("TeliconLatest.DataEntities.ADM04200", "ADM04200")
                        .WithMany("ADM03300")
                        .HasForeignKey("DepartmentID")
                        .HasConstraintName("FK_ADM03300_ADM04200")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ADM02200");

                    b.Navigation("ADM04200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03400", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM03300", "ADM03300")
                        .WithMany("ADM03400")
                        .HasForeignKey("ContractorID")
                        .HasConstraintName("FK_ADM03400_ADM03300")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.TRN23100", "TRN23100")
                        .WithMany("ADM03400")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_ADM03400_TRN23100")
                        .IsRequired();

                    b.Navigation("ADM03300");

                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM04210", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01100", "ADM01100")
                        .WithMany("ADM04210")
                        .HasForeignKey("ActivityID")
                        .HasConstraintName("FK_ADM04210_ADM01100")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.ADM04200", "ADM04200")
                        .WithMany("ADM04210")
                        .HasForeignKey("DepartmentID")
                        .HasConstraintName("FK_ADM04210_ADM04200")
                        .IsRequired();

                    b.Navigation("ADM01100");

                    b.Navigation("ADM04200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.CustomerEquipments", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Customer", "Customer")
                        .WithMany("CustomerEquipments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Memberships", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Applications", "Applications")
                        .WithMany("Memberships")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Memberships_Applications");

                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithOne("Membership")
                        .HasForeignKey("TeliconLatest.DataEntities.Memberships", "UserId")
                        .HasConstraintName("FK_Memberships_Users")
                        .IsRequired();

                    b.Navigation("Applications");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Profiles", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithOne("Profiles")
                        .HasForeignKey("TeliconLatest.DataEntities.Profiles", "UserId")
                        .HasConstraintName("FK_Profiles_Users")
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Roles", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Applications", "Applications")
                        .WithMany("Roles")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Roles_Applications");

                    b.Navigation("Applications");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN04100", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM03300", "ADM03300")
                        .WithMany("TRN04100")
                        .HasForeignKey("ConductorID")
                        .HasConstraintName("FK_TRN04100_ADM03300")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.ADM04100", "ADM04100")
                        .WithMany("TRN04100")
                        .HasForeignKey("DeductionID")
                        .HasConstraintName("FK_TRN04100_ADM04100")
                        .IsRequired();

                    b.Navigation("ADM03300");

                    b.Navigation("ADM04100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN09100", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM02300", "ADM02300")
                        .WithMany("TRN09100")
                        .HasForeignKey("ADM02300BatchID");

                    b.Navigation("ADM02300");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN09110", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.TRN09100", "TRN09100")
                        .WithMany("TRN09110")
                        .HasForeignKey("InvoiceNum")
                        .HasConstraintName("FK_TRN09110_TRN09100")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.TRN23110", "TRN23110")
                        .WithMany("TRN09110")
                        .HasForeignKey("WoActID")
                        .HasConstraintName("FK_TRN09110_TRN23110")
                        .IsRequired();

                    b.Navigation("TRN09100");

                    b.Navigation("TRN23110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN13110", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.TRN13120", "TRN13120")
                        .WithMany("TRN13110")
                        .HasForeignKey("MergedOrderId")
                        .HasConstraintName("FK_TRN13120_TRN13110")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.TRN23100", "TRN23100")
                        .WithMany("TRN13110")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_TRN23100_TRN13110")
                        .IsRequired();

                    b.Navigation("TRN13120");

                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN13120", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.TRN23100", "TRN23100")
                        .WithMany("TRN13120")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("FK_TRN13120_TRN23100")
                        .IsRequired();

                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN17100", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithMany("TRN17100")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK_TRN17100_Users");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN17110", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.TRN17100", "TRN17100")
                        .WithMany("TRN17110")
                        .HasForeignKey("QuotationId")
                        .HasConstraintName("FK_TRN17110_TRN17100")
                        .IsRequired();

                    b.Navigation("TRN17100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN19100", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithMany("TRN19100")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK_TRN19100_Users");

                    b.HasOne("TeliconLatest.DataEntities.ADM26100", "ADM26100")
                        .WithMany("TRN19100")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_ADM26100_TRN19100")
                        .IsRequired();

                    b.Navigation("ADM26100");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN19110", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01100", "ADM01100")
                        .WithMany("TRN19110")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_TRN19110_ADM01100")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.TRN19100", "TRN19100")
                        .WithMany("TRN19110")
                        .HasForeignKey("SInvoiceId")
                        .HasConstraintName("FK_TRN19110_TRN19100")
                        .IsRequired();

                    b.Navigation("ADM01100");

                    b.Navigation("TRN19100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23100", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01400", "ADM01400")
                        .WithMany("TRN23100")
                        .HasForeignKey("AreaID")
                        .HasConstraintName("FK_TRN23100_ADM01400")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.ADM03500", "ADM03500")
                        .WithMany("TRN23100")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_TRN23100_ADM03500")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithMany("TRN23100")
                        .HasForeignKey("CreateBy")
                        .HasConstraintName("FK_TRN23100_Users");

                    b.HasOne("TeliconLatest.DataEntities.ADM03200", "ADM03200")
                        .WithMany("TRN23100")
                        .HasForeignKey("Wo_client")
                        .HasConstraintName("FK_TRN23100_ADM03200")
                        .IsRequired();

                    b.Navigation("ADM01400");

                    b.Navigation("ADM03200");

                    b.Navigation("ADM03500");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23110", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.ADM01100", "ADM01100")
                        .WithMany("TRN23110")
                        .HasForeignKey("ActivityID")
                        .HasConstraintName("FK_TRN23110_ADM01100")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.TRN23100", "TRN23100")
                        .WithMany("TRN23110")
                        .HasForeignKey("WorkOID")
                        .HasConstraintName("FK_TRN23110_TRN23100")
                        .IsRequired();

                    b.Navigation("ADM01100");

                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23120", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.TRN23110", "TRN23110")
                        .WithMany("TRN23120")
                        .HasForeignKey("WoActID")
                        .HasConstraintName("FK_TRN23110_TRN23120")
                        .IsRequired();

                    b.Navigation("TRN23110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Users", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Applications", "Application")
                        .WithMany("Users")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_Users_Applications");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.UsersInRoles", b =>
                {
                    b.HasOne("TeliconLatest.DataEntities.Roles", "Roles")
                        .WithMany("UsersInRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UsersInRoles_Roles")
                        .IsRequired();

                    b.HasOne("TeliconLatest.DataEntities.Users", "Users")
                        .WithMany("UsersInRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UsersInRoles_Users")
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01100", b =>
                {
                    b.Navigation("ADM01110");

                    b.Navigation("ADM01150");

                    b.Navigation("ADM01250");

                    b.Navigation("ADM04210");

                    b.Navigation("TRN19110");

                    b.Navigation("TRN23110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM01400", b =>
                {
                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02100", b =>
                {
                    b.Navigation("ADM02200");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02200", b =>
                {
                    b.Navigation("ADM03300");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM02300", b =>
                {
                    b.Navigation("TRN09100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03200", b =>
                {
                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03300", b =>
                {
                    b.Navigation("ADM03400");

                    b.Navigation("TRN04100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM03500", b =>
                {
                    b.Navigation("ADM01100");

                    b.Navigation("TRN23100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM04100", b =>
                {
                    b.Navigation("TRN04100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM04200", b =>
                {
                    b.Navigation("ADM01100");

                    b.Navigation("ADM03300");

                    b.Navigation("ADM04210");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM13100", b =>
                {
                    b.Navigation("ADM01110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.ADM26100", b =>
                {
                    b.Navigation("ADM01400");

                    b.Navigation("TRN19100");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Applications", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Customer", b =>
                {
                    b.Navigation("CustomerEquipments");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Roles", b =>
                {
                    b.Navigation("UsersInRoles");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN09100", b =>
                {
                    b.Navigation("TRN09110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN13120", b =>
                {
                    b.Navigation("TRN13110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN17100", b =>
                {
                    b.Navigation("TRN17110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN19100", b =>
                {
                    b.Navigation("TRN19110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23100", b =>
                {
                    b.Navigation("ADM03400");

                    b.Navigation("TRN13110");

                    b.Navigation("TRN13120");

                    b.Navigation("TRN23110");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.TRN23110", b =>
                {
                    b.Navigation("TRN09110");

                    b.Navigation("TRN23120");
                });

            modelBuilder.Entity("TeliconLatest.DataEntities.Users", b =>
                {
                    b.Navigation("Membership");

                    b.Navigation("Profiles");

                    b.Navigation("TRN17100");

                    b.Navigation("TRN19100");

                    b.Navigation("TRN23100");

                    b.Navigation("UsersInRoles");
                });
#pragma warning restore 612, 618
        }
    }
}

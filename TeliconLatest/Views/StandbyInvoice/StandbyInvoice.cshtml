@model TeliconLatest.Models.SInvoice

@{
    Layout = null;
    int count = 1;
}

<div class="print-holder" data-id="@Model.Client.ReferenceNo">    
    <partial name="SInvoiceClientDataPartial" model="Model.Client" />
    <div class="bottom">        
        <h2 class="title">Standby</h2>
        <table class="prt-data">
            <thead>
                <tr>
                    <th>Date</th>                    
                    <th>Qty</th>     
                    <th>Description</th>               
                    <th>Rate</th>
                    <th>Amount</th>                  
                </tr>
            </thead>
            <tbody>                
                @foreach (var act in Model.Activities)
                {
                    <tr>
                        <td>@string.Format("{0:dd/MM/yyyy}", Model.Client.Date)</td>
                        <td>@act.ActivityQty</td>
                        <td><div style="text-align:left">@act.ActivityDesc</div></td>
                        <td class="number">@string.Format("{0:C}", act.ActivityCost)</td>
                        <td class="number">@string.Format("{0:C}", act.ActivityCost * Convert.ToDouble(act.ActivityQty))</td>
                    </tr>
                    count++;
                }
                <tr class="totals"><td colspan="4">Total: </td><td class="number">@string.Format("{0:C}", Model.Activities.Sum(x => x.ActivityCost * Convert.ToDouble(x.ActivityQty)))</td></tr>
                <tr class="totals"><td colspan="4">GCT: </td><td class="number">@string.Format("{0:C}", (Model.Activities.Sum(x => x.ActivityCost * Convert.ToDouble(x.ActivityQty)) / 100 * Model.GCTRate))</td></tr>
                <tr class="totals"><td colspan="4">Grand Total: </td><td class="number">@string.Format("{0:C}", Model.Activities.Sum(x => x.ActivityCost * Convert.ToDouble(x.ActivityQty)) + (Model.Activities.Sum(x => x.ActivityCost * Convert.ToDouble(x.ActivityQty)) / 100 * Model.GCTRate))</td></tr>
            </tbody>
        </table>
    </div>
    @using (Html.BeginForm("StandbyInvoiceToExcel", "StandbyInvoice", FormMethod.Post))
    {
        <input type="hidden" name="id" value="@ViewBag.Id" />
        <button class="export-clicker" type="submit"><i class="fe-export-1"></i></button>
        <button class="print-clicker"><i class="fe-print-1"></i></button>
    }    
</div>